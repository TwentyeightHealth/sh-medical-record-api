// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URI")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(64)
  role      RoleType @default(USER)
  createdAt DateTime @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@map("users")
}

model Client {
  id        String   @unique @db.VarChar(128)
  secret    String   @unique @db.VarChar(128)
  createdAt DateTime @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@map("clients")
}

model Patient {
  id                   Int               @id @unique @default(autoincrement())
  externalPatientId    String?           @map("external_patient_id") @db.VarChar(11)
  firstName            String?           @map("first_name") @db.VarChar(64)
  lastName             String?           @map("last_name") @db.VarChar(64)
  sex                  SexType           @default(FEMALE)
  dateOfBirth          DateTime          @map("date_of_birth") @db.Date
  stateCode            String?           @map("state_code") @db.Char(2)
  email                String            @unique @db.VarChar(64)
  phone                String?           @db.VarChar(14)
  addressLine1         String?           @map("address_line_1") @db.VarChar(92)
  addressLine2         String?           @map("address_line_2") @db.VarChar(92)
  city                 String?           @db.VarChar(50)
  state                String?           @db.Char(2)
  postalCode           String?           @map("postal_code") @db.VarChar(32)
  paymentType          PaymentType       @default(CASH) @map("payment_type")
  dateOfConsent        DateTime?         @map("date_of_consent") @db.Timestamptz(3)
  truepillPatientToken String?           @map("truepill_patient_token") @db.VarChar(50)
  stripeCustomerId     String?           @map("stripe_customer_id") @db.VarChar(50)
  prescriptions        Prescription[]
  insurances           InsurancePolicy[]
  consultations        Consultation[]
  createdAt            DateTime          @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt            DateTime          @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@unique([email, dateOfBirth])
  @@index([email, dateOfBirth])
  @@index([externalPatientId])
  @@map("patients")
}

model InsurancePolicy {
  id         Int      @id @default(autoincrement())
  memberName String?  @map("member_name") @db.VarChar(128)
  memberId   String?  @map("member_id") @db.VarChar(64)
  planName   String?  @map("plan_name") @db.VarChar(64)
  rxGroup    String?  @map("rx_group") @db.VarChar(64)
  rxBin      String?  @map("rx_bin") @db.VarChar(64)
  pcn        String?  @db.VarChar(64)
  isMedicaid Boolean? @default(false) @map("is_medicaid") @db.Boolean
  patient    Patient  @relation(fields: [patientId], references: [id])
  patientId  Int      @map("patient_id")
  createdAt  DateTime @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@map("insurance_policies")
}

model Prescription {
  id                      Int      @id @unique @default(autoincrement())
  prescriberCompany       String   @default("Simple Health") @map("prescriber_company") @db.VarChar(64)
  prescriberAddressLine1  String   @default("228 Park Ave S") @map("prescriber_address_line_1") @db.VarChar(64)
  prescriberAddressLine2  String?  @default("#20627") @map("prescriber_address_line_2") @db.VarChar(64)
  prescriberCity          String   @default("New York") @map("prescriber_city") @db.VarChar(50)
  prescriberState         String   @default("NY") @map("prescriber_state") @db.Char(2)
  prescriberPostalCode    String   @default("10003") @map("prescriber_postal_code") @db.VarChar(32)
  prescriberPhone         String   @default("(800) 607-9565") @map("prescriber_phone") @db.VarChar(14)
  prescriberName          String?  @map("prescriber_name") @db.VarChar(128)
  prescriberLicenseNumber String?  @map("prescriber_license_number") @db.VarChar(128)
  prescriberSignature     String?  @map("prescriber_signature") @db.VarChar(255)
  deaNumber               String?  @map("dea_number") @db.VarChar(9)
  npi                     String?  @db.VarChar(32)
  rxSignature             String?  @map("rx_signature") @db.VarChar(68)
  dateWritten             DateTime @map("date_written") @db.Timestamp(6)
  ndc                     String?  @db.VarChar(32)
  medication              String?  @db.Text
  quantity                Int?     @db.SmallInt
  unit                    String?  @db.VarChar(64)
  sig                     String?  @db.Text
  indication              String?  @db.VarChar(64)
  refills                 Int?     @db.SmallInt
  daw                     Boolean? @db.Boolean
  truepillRxToken         String?  @map("truepill_rx_token")
  patient                 Patient  @relation(fields: [patientId], references: [id])
  patientId               Int      @map("patient_id")
  createdAt               DateTime @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt               DateTime @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@map("prescriptions")
}

model Consultation {
  id                                          Int      @id @unique @default(autoincrement())
  abdominalOrPelvicSurgeries                  Boolean? @map("abdominal_or_pelvic_surgeries") @db.Boolean
  alcoholUsage                                String?  @map("alcohol_usage") @db.Text
  allergies                                   Boolean? @db.Boolean
  allergiesNote                               String?  @map("allergies_note") @db.Text
  averageMenstrualCycle                       String?  @map("average_menstrual_cycle") @db.Text
  bloating                                    Boolean? @db.Boolean
  bloodClots                                  Boolean? @map("blood_clot") @db.Boolean
  bloodClotsNote                              String?  @map("blood_clot_note") @db.Text
  bloodPressure                               String?  @map("blood_pressure") @db.VarChar(41)
  breastPainBeforePeriod                      Boolean? @map("breast_pain_before_period") @db.Boolean
  cervicalDysplasiaOrAbnormalPaps             Boolean? @map("cervical_dysplasia_or_abnormal_paps") @db.Boolean
  coldSoresFrequency                          String?  @map("cold_sores_frequency") @db.Text
  consentToTelehealth                         String?  @map("consent_to_telehealth") @db.Text
  currentBirthControl                         String?  @map("current_birth_control")
  currentBirthControlNote                     String?  @map("current_birth_control_note") @db.Text
  currentColdSoresOutbreak                    Boolean? @map("current_cold_sores_outbreak") @db.Boolean
  currentGenitalHerpesOutbreak                Boolean? @map("current_genitial_herpes_outbreak") @db.Boolean
  decreasedLibido                             Boolean? @map("decreased_libido") @db.Boolean
  diabetes                                    Boolean? @db.Boolean
  diabetesNote                                String?  @map("diabetes_note") @db.Text
  difficultySleeping                          Boolean? @map("difficulty_sleeping") @db.Boolean
  drospirenoneWaiver                          Boolean? @map("drospirenone_waiver") @db.Boolean
  endometriosis                               Boolean? @db.Boolean
  excessHairGrowth                            Boolean? @map("excess_hair_growth") @db.Boolean
  exerciseFrequency                           String?  @map("exercise_frequency") @db.Text
  fibroids                                    Boolean? @db.Boolean
  genitalHerpesFrequency                      String?  @map("genital_herpes_frequency") @db.Text
  givenBirth                                  Boolean? @map("given_birth") @db.Boolean
  hadPeriodInPastYear                         Boolean? @map("had_period_in_past_year") @db.Boolean
  hairLoss                                    Boolean? @map("hair_loss") @db.Boolean
  heartConditions                             Boolean? @map("heart_conditions") @db.Boolean
  heartConditionsNote                         String?  @map("heart_conditions_note") @db.Text
  height                                      Decimal? @db.Decimal()
  herpesConsultConditions                     String?  @map("herpes_consult_conditions") @db.Text
  herpesConsultMedications                    String?  @map("herpes_consult_medications") @db.Text
  highBloodPressure                           Boolean? @map("high_blood_pressure") @db.Boolean
  highBloodPressureNote                       String?  @map("high_blood_pressure_note") @db.Text
  highProlactinLevel                          Boolean? @map("high_prolactin_level") @db.Boolean
  hivOrAids                                   Boolean? @map("hiv_or_aids") @db.Boolean
  hotFlashesOrNightSweats                     Boolean? @map("hot_flashes_or_night_sweats") @db.Boolean
  irritabilityAnxietyDepressionOrWorseningPMS Boolean? @map("irritability_anxiety_depression_or_worsening_pms") @db.Boolean
  isBreastfeeding                             Boolean? @map("is_breastfeeding") @db.Boolean
  isGenericOk                                 Boolean? @map("is_generic_ok") @db.Boolean
  liverConditions                             Boolean? @map("liver_conditions") @db.Boolean
  liverConditionsNote                         String?  @map("liver_conditions_note") @db.Text
  loseBalanceOrTripEasily                     Boolean? @map("lose_balance_or_trip_easily") @db.Boolean
  medications                                 String?  @db.Text
  medicationsNote                             String?  @map("medications_note") @db.Text
  menstrualCycleDetails                       String?  @map("menstrual_cycle_details") @db.Text
  migraines                                   Boolean? @db.Boolean
  monthlyMenstrualCycles                      Boolean? @map("monthly_menstrual_cycles") @db.Boolean
  otherConditions                             Boolean? @map("other_conditions") @db.Boolean
  otherConditionsNote                         String?  @map("other_conditions_note") @db.Text
  ovarianCysts                                Boolean? @map("ovarian_cysts") @db.Boolean
  painBowelMovements                          Boolean? @map("pain_bowel_movements") @db.Boolean
  painDeepPenetrativeSex                      Boolean? @map("pain_deep_penetrative_sex") @db.Boolean
  painPelvic                                  Boolean? @map("pain_pelvic") @db.Boolean
  patchesOfThickenedDarkenedSkin              Boolean? @map("patches_of_thickened_darkened_skin") @db.Boolean
  periodPreference                            String?  @map("period_preference") @db.Text
  polycysticOvarianSyndrome                   Boolean? @map("polycystic_ovarian_syndrome") @db.Boolean
  pregnant                                    Boolean? @db.Boolean
  previousBirthControlPart1                   Boolean? @map("previous_birth_control_part1") @db.Boolean
  previousBirthControlPart1Note               String?  @map("previous_brith_control_part1_note") @db.Text
  previousBirthControlPart2                   Boolean? @map("previous_birth_control_part2") @db.Boolean
  previousBirthControlPart2Note               String?  @map("previous_brith_control_part2_note") @db.Text
  previouslyDiagnosedColdSores                Boolean? @map("previously_diagnosed_cold_sores") @db.Boolean
  previouslyDiagnosedGenitalHerpes            Boolean? @map("previously_diagnosed_genital_herpes") @db.Boolean
  primaryReason                               String?  @map("primary_reason") @db.Text
  progestinOnlyPillQuestions                  Boolean? @map("progestin_only_pill_questions") @db.Boolean
  questionsForDoctor                          Boolean? @map("questions_for_doctor") @db.Boolean
  questionsForDoctorNote                      String?  @map("questions_for_doctor_note") @db.Text
  recentVaricellaOrZosterVaccination          Boolean? @map("recent_varicella_or_zoster_vaccination") @db.Boolean
  regularMenstrualCycles                      String?  @map("regular_menstrual_cycles") @db.Text
  rheumatologicOrAutoimmuneDisorder           Boolean? @map("rheumatologic_or_autoimmune_disorder") @db.Boolean
  severeAcne                                  Boolean? @map("severe_acne") @db.Boolean
  severeMenstrualCramping                     Boolean? @map("severe_menstrual_cramping") @db.Boolean
  sexuallyTransmittedInfection                Boolean? @map("sexually_transmitted_infection") @db.Boolean
  sexuallyTransmittedInfectionNote            String?  @map("sexually_transmitted_infection_note") @db.Text
  sideEffectConcerns                          Boolean? @map("side_effect_concerns") @db.Boolean
  sideEffectConcernsNote                      String?  @map("side_effect_concerns_note") @db.Text
  stateCode                                   String?  @map("state_code") @db.Char(2)
  supplements                                 String?  @db.Text
  surgeries                                   Boolean? @db.Boolean
  surgeriesNote                               String?  @map("surgeries_note") @db.Text
  thyroidDisorder                             Boolean? @map("thyroid_disorder") @db.Boolean
  tobacco                                     Boolean? @db.Boolean
  tobaccoNote                                 String?  @map("tobacco_note") @db.Text
  tobaccoUsage                                String?  @map("tobacco_usage") @db.Text
  usingHormonalBirthControl                   Boolean? @map("using_hormonal_birth_control") @db.Boolean
  uterinePolyps                               Boolean? @map("uterine_polyps") @db.Boolean
  vaginalDrynessOrPainWithSex                 Boolean? @map("vaginal_dryness_or_pain_with_sex") @db.Boolean
  weight                                      Decimal? @db.Decimal()
  weightGain                                  Boolean? @map("weight_gain") @db.Boolean
  patient                                     Patient  @relation(fields: [patientId], references: [id])
  patientId                                   Int      @map("patient_id")
  createdAt                                   DateTime @default(now()) @map("created_at") @ignore @db.Timestamptz(6)
  updatedAt                                   DateTime @default(now()) @updatedAt @map("updated_at") @ignore @db.Timestamptz(6)

  @@map("consultations")
}

enum RoleType {
  USER
  PROVIDER
  ADMIN
}

enum PaymentType {
  INSURANCE
  CASH
}

enum SexType {
  MALE
  FEMALE
  INTERSEX
}
