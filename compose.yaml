version: '3.9'
services:
  database:
    image: postgres:15.3-alpine
    container_name: medical-record-db
    hostname: postgres
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  api:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: dockerfile.dev
    container_name: medical-record-api
    hostname: api
    expose:
      - "7000"
    ports:
      - "7000:7000"
    volumes:
      - ./:usr/app
    command: npm run start:dev
    
  # dbadmin:
  #   image: dpage/pgadmin4:7.1
  #   container_name: medical-record-db-admin
  #   depends_on:
  #     - database
  #   ports:
  #     - ${PGADMIN_PORT:-5555}:80
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   restart: unless-stopped

  # api:
  #   stdin_open: true
  #   build:
  #     context: .
  #     dockerfile: dockerfile
  #   container_name: medical-record-api
  #   depends_on:
  #     - postgres
  #   ports:
  #     - ${API_PORT:-4000}:4000
  #   restart: always

volumes:
  # meilisearch_data:
  # redis_data:
  # mongodb_data:
  postgres_data:
  # pgadmin_data:
